import { Telegraf } from 'telegraf';
import { session } from 'telegraf/session';
import axios from 'axios';
import { Mongo } from "@telegraf/session/mongodb";
import { token } from "./config.js";

const store = Mongo({
    url: "mongodb://127.0.0.1:27017",
    database: "telegraf-bot",
});

const bot = new Telegraf(token);
bot.use(session({ store }));

const languages = {
    "ru": "–†—É—Å—Å–∫–∏–π üá∑üá∫",
    "fr": "France üá´üá∑",
    "en": "English üá¨üáß",
    "de": "Deutschland üá©üá™"
}
bot.start(ctx => {
    ctx.reply(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${ctx.chat.username}!`);

    setTimeout(() => ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏`, {
        reply_markup: {
            inline_keyboard: [
                [{ text: "–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data: "ru" }, { text: "English üá¨üáß", callback_data: "en" }],
                [{ text: "France üá´üá∑", callback_data: "fr" }, { text: "Deutschland üá©üá™", callback_data: "de" }],
            ]
        }
    }), 1000);
});

bot.help(ctx => ctx.reply("–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º"));

bot.command('language', (ctx) => {
    ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏`, {
        reply_markup: {
            inline_keyboard: [
                [{ text: "–†—É—Å—Å–∫–∏–π üá∑üá∫", callback_data: "ru" }, { text: "English üá¨üáß", callback_data: "en" }],
                [{ text: "France üá´üá∑", callback_data: "fr" }, { text: "Deutschland üá©üá™", callback_data: "de" }],
            ]
        }
    });
});

bot.on('message', async (ctx) => {
    let res = await axios.get("https://ftapi.pythonanywhere.com/translate", {
        params: {
            dl: await store.get(ctx.message.chat.id),
            text: ctx.text
        }
    });
    let words = res.data['destination-text'];
    ctx.reply(words);
});

bot.on("callback_query", async (ctx) => {
    await store.set(ctx.update.callback_query.from.id, ctx.update.callback_query.data);
    ctx.reply(`–í—ã–±—Ä–∞–Ω —è–∑—ã–∫: ${languages[ctx.update.callback_query.data]}. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏`);
});

bot.launch();